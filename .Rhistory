devtools::document()
devtools::document()
usethis::use_vignette("Tutorial")
data(mtcars)
nrow(mtcars)
View(mtcars)
data(iris)
nrow(iris)
View(iris)
summary(iris$Species)
# Required to run the vifmiqo function
library(Rvifmiqo)
library(Matrix)
library(gurobi)
# Required to run the vifmiqo function
library(Rvifmiqo)
library(Matrix)
# library(gurobi)
# Used for data formatting
library(fastDummies)
data(iris)
head(iris)
# Remove rows with missing values
iris <- iris[complete.cases(iris), ]
# Separate predictors and outcome
X <- iris[,-c('Petal.Width')]
# Separate predictors and outcome
X <- iris[, -c('Petal.Width')]
# Remove rows with missing values
iris <- iris[complete.cases(iris), ]
# Separate predictors and outcome
X <- iris[ , !(names(iris) == 'Petal.Width')]
y <- iris$Petal.Width
# Create dummy variables for categorical data
X <- dummy_cols(X, select_columns = c("Species"))
# Remove the original Species variable
X <- X[ , !(names(X) == 'Species')]
# See the results
head(X)
cor(iris$Sepal.Length, iris$Sepal.Width)
cor(iris$Petal.Length, iris$Petal.Width)
packageVersion("Matrix")
install.packages("rpart.plot")
# Required to run the vifmiqo function
library(Rvifmiqo)
library(Matrix)
# library(gurobi)
# Used for data formatting
library(fastDummies)
library(ggplot2)
library(reshape2)
cormat <- round(cor(X),2)
melted_cormat <- melt(cormat)
ggplot(data = melted_cormat, aes(x=Var1, y=Var2, fill=value)) +
geom_tile()
cormat <- round(cor(X),2)
melted_cormat <- melt(cormat)
ggplot(data = melted_cormat, aes(x=Var1, y=Var2, fill=value)) +
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +
geom_tile()
cormat <- round(cor(X),2)
upper_tri <- get_upper_tri(cormat)
get_upper_tri <- function(cormat){
cormat[lower.tri(cormat)]<- NA
return(cormat)
}
cormat <- round(cor(X),2)
upper_tri <- get_upper_tri(cormat)
melted_cormat <- melt(upper_tri)
ggplot(data = melted_cormat, aes(x=Var1, y=Var2, fill=value)) +
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +
geom_tile()
get_upper_tri <- function(cormat){
cormat[lower.tri(cormat)]<- NA
return(cormat)
}
cormat <- round(cor(X),2)
upper_tri <- get_upper_tri(cormat)
melted_cormat <- melt(upper_tri, na.rm = TRUE)
# Heatmap
library(ggplot2)
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))+
coord_fixed()
VIF(y~colnames(X), data=iris)
vif(y~colnames(X), data=iris)
library(car)
library(car)
vif(y~colnames(X), data=iris)
vif(lm(y~colnames(X), data=iris))
vif(lm(y ~ Sepal.Length + Sepal.Width + Petal.Length + I(Species)), data=iris))
vif(lm(y ~ Sepal.Length + Sepal.Width + Petal.Length + I(Species), data=iris))
full_model <- lm(y ~ Sepal.Length + Sepal.Width + Petal.Length + I(Species), data=iris)
summary(full_model)
vif(full_model)
